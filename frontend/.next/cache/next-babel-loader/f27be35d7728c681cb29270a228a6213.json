{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Dishes(props) {\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  var restaurant = data.restaurant; //searchquery and then list out\n\n  if (props.restId > 0) {\n    if (props.query) {\n      var searchQuery = restaurant.dishes.filter(function (res) {\n        if (res.name.toLowerCase().includes(props.query)) {\n          return res;\n        }\n      });\n\n      if (searchQuery.length > 0) {\n        var dishList = searchQuery.map(function (res) {\n          var _jsx;\n\n          return __jsx(Col, {\n            xs: \"6\",\n            sm: \"4\",\n            style: {\n              padding: 0\n            },\n            key: res.id\n          }, __jsx(Card, {\n            style: {\n              margin: \"0 10px\"\n            }\n          }, __jsx(CardImg, {\n            top: true,\n            style: {\n              height: 150,\n              width: 150\n            },\n            src: API_URL + res.image.url\n          }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n            className: \"card-footer\"\n          }, __jsx(Button, (_jsx = {\n            color: \"info\",\n            outline: true\n          }, _defineProperty(_jsx, \"color\", \"primary\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n            return addItem(res);\n          }), _jsx), \"+ Add To Cart\"))));\n        });\n        return __jsx(React.Fragment, null, dishList);\n      } else {\n        return __jsx(\"h2\", null, \"No such dish\");\n      }\n    } else {\n      return __jsx(React.Fragment, null, restaurant.dishes.map(function (res) {\n        var _jsx2;\n\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: res.id\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 150,\n            width: 150\n          },\n          src: API_URL + res.image.url\n        }), __jsx(CardBody, null, __jsx(CardTitle, null, res.name), __jsx(CardText, null, res.description)), __jsx(\"div\", {\n          className: \"card-footer\"\n        }, __jsx(Button, (_jsx2 = {\n          color: \"info\",\n          outline: true\n        }, _defineProperty(_jsx2, \"color\", \"primary\"), _defineProperty(_jsx2, \"onClick\", function onClick() {\n          return addItem(res);\n        }), _jsx2), \"+ Add To Cart\"))));\n      }));\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport default Dishes;\n/*\r\n<div>\r\n    <InputGroup>\r\n            <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n            <Input \r\n                onChange={(e) =>\r\n                  setQuery(e.target.value.toLocaleLowerCase())\r\n                  }\r\n                  value={query}\r\n            />\r\n            </InputGroup>\r\n      </div>\r\n      */","map":null,"metadata":{},"sourceType":"module"}