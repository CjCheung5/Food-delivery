{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/calvincheung/Food-delivery/frontend/components/restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      query = _useState3[0],\n      setQuery = _useState3[1];\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants)); // definet renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID, query) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      query: query,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \" \");\n  };\n\n  if (props.search) {\n    var searchQuery = data.restaurants.filter(function (res) {\n      if (res.name.toLowerCase().includes(props.search)) {\n        return res;\n      }\n    });\n\n    if (searchQuery.length > 0) {\n      console.log(\"query>0\");\n      var restList = searchQuery.map(function (res) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          key: res.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 0.5rem 20px 0.5rem\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 200\n          },\n          src: API_URL + res.image.url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }), __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, __jsx(Button, {\n          color: \"info\",\n          onClick: function onClick() {\n            setRestaurantID(res.id);\n            AppContext.restaurantID = res.id;\n            console.log(AppContext);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, res.name))));\n      });\n\n      var ifRestaurantIDSearchDisplay = function ifRestaurantIDSearchDisplay() {\n        if (restaurantID > 0) {\n          return __jsx(InputGroup, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }\n          }, __jsx(InputGroupAddon, {\n            addonType: \"append\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, \" Search \"), __jsx(Input, {\n            onChange: function onChange(e) {\n              return setQuery(e.target.value.toLocaleLowerCase());\n            },\n            value: query,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          }));\n        } else {\n          return;\n        }\n      };\n\n      return __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, restList), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, ifRestaurantIDSearchDisplay(restaurantID)), __jsx(Row, {\n        xs: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, renderDishes(restaurantID, query)));\n    } else {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }\n      }, \"No such restaurant\");\n    }\n  } else {\n    var fullRestList = data.restaurants.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 5\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: API_URL + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, res.name))));\n    });\n\n    var _ifRestaurantIDSearchDisplay = function _ifRestaurantIDSearchDisplay() {\n      if (restaurantID > 0) {\n        return __jsx(InputGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }\n        }, __jsx(InputGroupAddon, {\n          addonType: \"append\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }\n        }, \" Search \"), __jsx(Input, {\n          onChange: function onChange(e) {\n            return setQuery(e.target.value.toLocaleLowerCase());\n          },\n          value: query,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }\n        }));\n      } else {\n        return;\n      }\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, fullRestList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, _ifRestaurantIDSearchDisplay(restaurantID)), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, renderDishes(restaurantID, query))));\n  }\n}\n\n_s(RestaurantList, \"/OQODlrIPnYywqMf81cgD8DOBCY=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["/Users/calvincheung/Food-delivery/frontend/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","InputGroup","InputGroupAddon","Input","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","query","setQuery","API_URL","process","env","NEXT_PUBLIC_API_URL","GET_RESTAURANTS","loading","error","data","console","log","restaurants","renderDishes","search","searchQuery","filter","res","name","toLowerCase","includes","length","restList","map","id","margin","height","image","url","description","ifRestaurantIDSearchDisplay","e","target","value","toLocaleLowerCase","fullRestList"],"mappings":"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","sourcesContent":["import {gql,useQuery} from '@apollo/client';\r\nimport Dishes from \"./dishes\"\r\nimport {useContext, useState} from 'react';\r\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\r\n\r\n\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n\r\nfunction RestaurantList(props){\r\n  const[restaurantID, setRestaurantID] = useState(0)\r\n  const {cart } = useContext(AppContext);\r\n  const [state, setState] = useState(cart);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\r\n  const GET_RESTAURANTS = gql`\r\n    query {\r\n      restaurants {\r\n        id\r\n        name\r\n        description\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n  console.log(`Query Data: ${data.restaurants}`)\r\n\r\n\r\n  // definet renderer for Dishes\r\nconst renderDishes = (restaurantID, query) => {\r\n  return (<Dishes restId={restaurantID} query={query}> </Dishes>)\r\n};\r\n\r\nif(props.search){\r\n  let searchQuery = data.restaurants.filter((res) =>{\r\n    if (res.name.toLowerCase().includes(props.search)){\r\n      return res;\r\n    }\r\n  });\r\n\r\n\r\n  if(searchQuery.length > 0){\r\n    console.log(\"query>0\")\r\n    const restList = searchQuery.map((res) => (\r\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\r\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n          <CardImg\r\n            top={true}\r\n            style={{ height: 200 }}\r\n            src={\r\n            API_URL+ res.image.url\r\n            }\r\n          />\r\n          <CardBody>\r\n            <CardText>{res.description}</CardText>\r\n          </CardBody>\r\n          <div className=\"card-footer\">\r\n          \r\n          <Button color=\"info\" onClick={()=> {\r\n            setRestaurantID(res.id)\r\n            AppContext.restaurantID = res.id;\r\n            console.log(AppContext);\r\n          }}>{res.name}</Button>\r\n           \r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    ))\r\n          \r\n    const ifRestaurantIDSearchDisplay = ()=>{\r\n      if(restaurantID>0){\r\n        return (\r\n          <InputGroup>\r\n                <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n                <Input\r\n                    onChange={(e) =>\r\n                    setQuery(e.target.value.toLocaleLowerCase())\r\n                    }\r\n                    value={query}\r\n                />\r\n                </InputGroup>\r\n        )\r\n      } else{\r\n        return;\r\n      }\r\n    }\r\n    return(\r\n  \r\n      <Container>\r\n      <Row xs='3'>\r\n        {restList}\r\n      </Row>\r\n      <Row>\r\n        {ifRestaurantIDSearchDisplay(restaurantID)}\r\n        </Row>\r\n      <Row xs='3'>\r\n      {renderDishes(restaurantID, query)}\r\n      </Row>\r\n   \r\n      </Container>\r\n   \r\n    )\r\n  } else {\r\n    return <h1>No such restaurant</h1>;\r\n  }\r\n\r\n} else{\r\n  const fullRestList = data.restaurants.map((res) => (\r\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\r\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n        <CardImg\r\n          top={true}\r\n          style={{ height: 200 }}\r\n          src={\r\n          API_URL+ res.image.url\r\n          }\r\n        />\r\n        <CardBody>\r\n          <CardText>{res.description}</CardText>\r\n        </CardBody>\r\n        <div className=\"card-footer\">\r\n        \r\n        <Button color=\"info\" onClick={()=> setRestaurantID(res.id)}>{res.name}</Button>\r\n         \r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  ))\r\n  \r\n  const ifRestaurantIDSearchDisplay = ()=>{\r\n    if(restaurantID>0){\r\n      return (\r\n        <InputGroup>\r\n              <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n              <Input\r\n                  onChange={(e) =>\r\n                  setQuery(e.target.value.toLocaleLowerCase())\r\n                  }\r\n                  value={query}\r\n              />\r\n              </InputGroup>\r\n      )\r\n    } else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <Container>\r\n      <Row xs='3'>\r\n        {fullRestList}\r\n      </Row>\r\n      <Row xs=\"3\">\r\n        {ifRestaurantIDSearchDisplay(restaurantID)} \r\n        </Row>\r\n      <Row xs='3'>\r\n      {renderDishes(restaurantID, query)}\r\n      </Row>\r\n   \r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\n}\r\n   export default RestaurantList"]},"metadata":{},"sourceType":"module"}