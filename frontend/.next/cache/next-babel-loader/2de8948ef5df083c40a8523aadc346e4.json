{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      query = _useState3[0],\n      setQuery = _useState3[1];\n\n  var API_URL = process.env.NEXT_PUBLIC_API_URL;\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants)); // definet renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID, query) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      query: query\n    }, \" \");\n  };\n\n  if (props.search) {\n    var searchQuery = data.restaurants.filter(function (res) {\n      if (res.name.toLowerCase().includes(props.search)) {\n        return res;\n      }\n    });\n\n    if (searchQuery.length > 0) {\n      console.log(\"query>0\");\n      var restList = searchQuery.map(function (res) {\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          key: res.id\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 0.5rem 20px 0.5rem\"\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 200\n          },\n          src: API_URL + res.image.url\n        }), __jsx(CardBody, null, __jsx(CardText, null, res.description)), __jsx(\"div\", {\n          className: \"card-footer\"\n        }, __jsx(Button, {\n          color: \"info\",\n          onClick: function onClick() {\n            setRestaurantID(res.id);\n            AppContext.restaurantID = res.id;\n            console.log(AppContext);\n          }\n        }, res.name))));\n      });\n\n      var ifRestaurantIDSearchDisplay = function ifRestaurantIDSearchDisplay() {\n        if (restaurantID > 0) {\n          return __jsx(InputGroup, null, __jsx(InputGroupAddon, {\n            addonType: \"append\"\n          }, \" Search \"), __jsx(Input, {\n            onChange: function onChange(e) {\n              return setQuery(e.target.value.toLocaleLowerCase());\n            },\n            value: query\n          }));\n        } else {\n          return;\n        }\n      };\n\n      return __jsx(Container, null, __jsx(Row, {\n        xs: \"3\"\n      }, restList), __jsx(Row, null, ifRestaurantIDSearchDisplay(restaurantID)), __jsx(Row, {\n        xs: \"3\"\n      }, renderDishes(restaurantID, query)));\n    } else {\n      return __jsx(\"h1\", null, \"No such restaurant\");\n    }\n  } else {\n    var fullRestList = data.restaurants.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: API_URL + res.image.url\n      }), __jsx(CardBody, null, __jsx(CardText, null, res.description)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        }\n      }, res.name))));\n    });\n\n    var _ifRestaurantIDSearchDisplay = function _ifRestaurantIDSearchDisplay() {\n      if (restaurantID > 0) {\n        return __jsx(InputGroup, null, __jsx(InputGroupAddon, {\n          addonType: \"append\"\n        }, \" Search \"), __jsx(Input, {\n          onChange: function onChange(e) {\n            return setQuery(e.target.value.toLocaleLowerCase());\n          },\n          value: query\n        }));\n      } else {\n        return;\n      }\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(Row, {\n      xs: \"3\"\n    }, fullRestList), __jsx(Row, {\n      xs: \"3\"\n    }, _ifRestaurantIDSearchDisplay(restaurantID)), __jsx(Row, {\n      xs: \"3\"\n    }, renderDishes(restaurantID, query))));\n  }\n}\n\nexport default RestaurantList;","map":null,"metadata":{},"sourceType":"module"}