{"ast":null,"code":"var _jsxFileName = \"/Users/calvincheung/capstoneTwo/frontend/components/restaurantList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n  let searchQuery = data.restaurants.filter(res => {\n    if (props.search) {\n      if (res.name.toLowerCase().includes(props.search)) {\n        return res;\n      } else {\n        console.log(\"nothing to return\");\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  });\n  let restId = searchQuery[0].id; // definet renderer for Dishes\n\n  const renderDishes = (restaurantID, query) => {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      query: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    console.log(\"query>0\");\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + res.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: () => setRestaurantID(res.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, res.name)))));\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, restList), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, __jsx(InputGroupAddon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \" Search \"), __jsx(Input, {\n      onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n      value: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }))), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, renderDishes(restaurantID, query)));\n  } else {\n    console.log(\"search query<0\");\n    return \"\";\n  }\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["/Users/calvincheung/capstoneTwo/frontend/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","InputGroup","InputGroupAddon","Input","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","query","setQuery","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","search","name","toLowerCase","includes","restId","id","renderDishes","length","restList","map","margin","height","image","url","description","e","target","value","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import {gql,useQuery} from '@apollo/client';\r\nimport Dishes from \"./dishes\"\r\nimport {useContext, useState} from 'react';\r\nimport { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\r\n\r\n\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n\r\nfunction RestaurantList(props){\r\n  const[restaurantID, setRestaurantID] = useState(0)\r\n  const {cart } = useContext(AppContext);\r\n  const [state, setState] = useState(cart);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const GET_RESTAURANTS = gql`\r\n    query {\r\n      restaurants {\r\n        id\r\n        name\r\n        description\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n  console.log(`Query Data: ${data.restaurants}`)\r\n\r\n\r\nlet searchQuery = data.restaurants.filter((res) =>{\r\n  if(props.search){\r\n    if (res.name.toLowerCase().includes(props.search)){\r\n      return res;\r\n    } else{\r\n      console.log(\"nothing to return\");\r\n      return \"\";\r\n    }\r\n  }else{\r\n    return \"\";\r\n  }\r\n  });\r\n\r\nlet restId = searchQuery[0].id\r\n \r\n// definet renderer for Dishes\r\n  const renderDishes = (restaurantID, query) => {\r\n    return (<Dishes restId={restaurantID} query={query}> </Dishes>)\r\n  };\r\n\r\nif(searchQuery.length > 0){\r\n  console.log(\"query>0\")\r\n  const restList = searchQuery.map((res) => (\r\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\r\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n        <CardImg\r\n          top={true}\r\n          style={{ height: 200 }}\r\n          src={\r\n          `http://localhost:1337`+ res.image.url\r\n          }\r\n        />\r\n        <CardBody>\r\n          <CardText>{res.description}</CardText>\r\n        </CardBody>\r\n        <div className=\"card-footer\">\r\n        \r\n        <Button color=\"info\" onClick={()=> setRestaurantID(res.id)}>{res.name}</Button>\r\n         \r\n        </div>\r\n      </Card>\r\n    </Col>\r\n  ))\r\n\r\n  return(\r\n\r\n    <Container>\r\n    <Row xs='3'>\r\n      {restList}\r\n    </Row>\r\n    <Row> \r\n    <InputGroup>\r\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n          <Input\r\n              onChange={(e) =>\r\n              setQuery(e.target.value.toLocaleLowerCase())\r\n              }\r\n              value={query}\r\n          />\r\n          </InputGroup>\r\n      </Row>\r\n    <Row xs='3'>\r\n    {renderDishes(restaurantID, query)}\r\n    </Row>\r\n \r\n    </Container>\r\n \r\n  )\r\n} else {\r\n  console.log(\"search query<0\")\r\n  return \"\";\r\n}\r\n}\r\n   export default RestaurantList"]},"metadata":{},"sourceType":"module"}