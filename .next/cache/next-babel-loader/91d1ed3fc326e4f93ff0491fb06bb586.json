{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/calvincheung/capstoneTwo/components/dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Dishes(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  console.log(\"query is\", props.query);\n  console.log(\"ID is\", props.restId);\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant; //searchquery and then list out\n\n  if (props.restId > 0) {\n    if (props.query) {\n      var searchQuery = restaurant.dishes.filter(function (res) {\n        if (res.name.toLowerCase().includes(props.query)) {\n          console.log(res);\n          return res;\n        } else {\n          return __jsx(\"h1\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }\n          }, \"Error\");\n        }\n      });\n\n      if (searchQuery.length > 0) {\n        var _dishList = searchQuery.map(function (res) {\n          var _jsx;\n\n          __jsx(Col, {\n            xs: \"6\",\n            sm: \"4\",\n            style: {\n              padding: 0\n            },\n            key: res.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }\n          }, __jsx(Card, {\n            style: {\n              margin: \"0 10px\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }\n          }, __jsx(CardImg, {\n            top: true,\n            style: {\n              height: 150,\n              width: 150\n            },\n            src: \"http://localhost:1337\".concat(res.image.url),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }\n          }), __jsx(CardBody, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }\n          }, __jsx(CardTitle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }, res.name), __jsx(CardText, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }, res.description)), __jsx(\"div\", {\n            className: \"card-footer\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }\n          }, __jsx(Button, (_jsx = {\n            color: \"info\",\n            outline: true\n          }, _defineProperty(_jsx, \"color\", \"primary\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n            return addItem(res);\n          }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }), _jsx), \"+ Add To Cart\"))));\n        });\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, dishList));\n    } else {\n      return __jsx(React.Fragment, null, restaurant.dishes.map(function (res) {\n        var _jsx2;\n\n        return __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: res.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 150,\n            width: 150\n          },\n          src: \"http://localhost:1337\".concat(res.image.url),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }), __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        }, __jsx(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }, res.name), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, __jsx(Button, (_jsx2 = {\n          color: \"info\",\n          outline: true\n        }, _defineProperty(_jsx2, \"color\", \"primary\"), _defineProperty(_jsx2, \"onClick\", function onClick() {\n          return addItem(res);\n        }), _defineProperty(_jsx2, \"__self\", _this), _defineProperty(_jsx2, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }), _jsx2), \"+ Add To Cart\"))));\n      }));\n    }\n  } else {\n    return \"\";\n  }\n}\n\n_s(Dishes, \"fozMU1l7TGPKwww7Ipct1ceMLiM=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n/*\r\n<div>\r\n    <InputGroup>\r\n            <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n            <Input \r\n                onChange={(e) =>\r\n                  setQuery(e.target.value.toLocaleLowerCase())\r\n                  }\r\n                  value={query}\r\n            />\r\n            </InputGroup>\r\n      </div>\r\n      */\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["/Users/calvincheung/capstoneTwo/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","InputGroup","InputGroupAddon","Input","Dishes","props","restaurantID","setRestaurantID","addItem","console","log","query","restId","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","searchQuery","dishes","filter","res","name","toLowerCase","includes","length","dishList","map","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\r\nimport {gql,useQuery} from '@apollo/client';\r\nimport {useState, useContext} from 'react'\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n  import { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\r\n  \r\nfunction Dishes(props){\r\n  const [restaurantID, setRestaurantID] = useState()\r\n  const {addItem} = useContext(AppContext);\r\n\r\n  console.log(\"query is\", props.query);\r\n  console.log(\"ID is\", props.restId);\r\n\r\nconst GET_RESTAURANT_DISHES = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      id\r\n      name\r\n      dishes {\r\n        id\r\n        name\r\n        description\r\n        price\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: props.restId},\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  //searchquery and then list out\r\n\r\n  if (props.restId > 0){\r\n    if(props.query) {\r\n      let searchQuery = restaurant.dishes.filter((res)=>{\r\n        if (res.name.toLowerCase().includes(props.query)){\r\n          console.log(res);\r\n          return res;\r\n        } else{\r\n          return (\r\n          <h1>Error</h1>);\r\n        }\r\n      });\r\n\r\n      if(searchQuery.length > 0){\r\n       const dishList = searchQuery.map((res)=>{\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n            <Card style={{ margin: \"0 10px\" }}>\r\n              <CardImg\r\n                top={true}\r\n                style={{ height: 150, width:150 }}\r\n                src={`http://localhost:1337${res.image.url}`}\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{res.name}</CardTitle>\r\n                <CardText>{res.description}</CardText>\r\n              </CardBody>\r\n              <div className=\"card-footer\">\r\n                <Button color=\"info\"\r\n                  outline\r\n                  color=\"primary\"\r\n                  onClick = {()=> addItem(res)}\r\n                >\r\n                  + Add To Cart\r\n                </Button>\r\n                \r\n              </div>\r\n            </Card>\r\n          </Col>\r\n          })\r\n      }\r\n\r\n      return(\r\n        <>\r\n        <Row>\r\n        {dishList}\r\n        </Row>\r\n        </>\r\n      )\r\n    } \r\n    \r\n    else{\r\n      return(\r\n        <>\r\n          {restaurant.dishes.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n              <Card style={{ margin: \"0 10px\" }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 150, width:150 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Button color=\"info\"\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick = {()=> addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                  \r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n    else{\r\n      return \"\"\r\n    }\r\n    }\r\n    export default Dishes\r\n\r\n\r\n    /*\r\n    <div>\r\n        <InputGroup>\r\n                <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n                <Input \r\n                    onChange={(e) =>\r\n                      setQuery(e.target.value.toLocaleLowerCase())\r\n                      }\r\n                      value={query}\r\n                />\r\n                </InputGroup>\r\n          </div>\r\n          */"]},"metadata":{},"sourceType":"module"}