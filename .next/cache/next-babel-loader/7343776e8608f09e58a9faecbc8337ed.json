{"ast":null,"code":"var _jsxFileName = \"/Users/calvincheung/capstoneTwo/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Dishes(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: props.restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant; //searchquery and then list out\n\n  if (props.restId > 0) {\n    if (props.query) {\n      let searchQuery = restaurant.dishes.filter(res => {\n        if (res.name.toLowerCase().includes(props.query)) {\n          return res;\n        } else {\n          return __jsx(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }\n          }, \"Error\");\n        }\n      });\n\n      if (searchQuery.length > 0) {\n        const dishList = searchQuery.map(res => __jsx(Col, {\n          xs: \"6\",\n          sm: \"4\",\n          style: {\n            padding: 0\n          },\n          key: res.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, __jsx(Card, {\n          style: {\n            margin: \"0 10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 150,\n            width: 150\n          },\n          src: `http://localhost:1337${res.image.url}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }), __jsx(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, __jsx(CardTitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, res.name), __jsx(CardText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"card-footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }, __jsx(Button, {\n          color: \"info\",\n          outline: true,\n          color: \"primary\",\n          onClick: () => addItem(res),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }, \"+ Add To Cart\")))));\n        return __jsx(React.Fragment, null, dishList);\n      }\n\n      ;\n    } else {\n      return __jsx(React.Fragment, null, restaurant.dishes.map(res => __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: `http://localhost:1337${res.image.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        color: \"primary\",\n        onClick: () => addItem(res),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, \"+ Add To Cart\"))))));\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport default Dishes;\n/*\r\n<div>\r\n    <InputGroup>\r\n            <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n            <Input \r\n                onChange={(e) =>\r\n                  setQuery(e.target.value.toLocaleLowerCase())\r\n                  }\r\n                  value={query}\r\n            />\r\n            </InputGroup>\r\n      </div>\r\n      */","map":{"version":3,"sources":["/Users/calvincheung/capstoneTwo/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","InputGroup","InputGroupAddon","Input","Dishes","props","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restId","restaurant","query","searchQuery","dishes","filter","res","name","toLowerCase","includes","length","dishList","map","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\r\nimport {gql,useQuery} from '@apollo/client';\r\nimport {useState, useContext} from 'react'\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n  import { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\r\n  \r\nfunction Dishes(props){\r\n  const [restaurantID, setRestaurantID] = useState()\r\n  const {addItem} = useContext(AppContext);\r\n\r\nconst GET_RESTAURANT_DISHES = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      id\r\n      name\r\n      dishes {\r\n        id\r\n        name\r\n        description\r\n        price\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: props.restId},\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  //searchquery and then list out\r\n\r\n  if (props.restId > 0){\r\n    if(props.query) {\r\n\r\n      let searchQuery = restaurant.dishes.filter((res)=>{\r\n        if (res.name.toLowerCase().includes(props.query)){\r\n          return res;\r\n        } else{\r\n          return (\r\n          <h1>Error</h1>);\r\n        }\r\n      });\r\n\r\n      if(searchQuery.length > 0){\r\n       const dishList = searchQuery.map((res)=>(\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n            <Card style={{ margin: \"0 10px\" }}>\r\n              <CardImg\r\n                top={true}\r\n                style={{ height: 150, width:150 }}\r\n                src={`http://localhost:1337${res.image.url}`}\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{res.name}</CardTitle>\r\n                <CardText>{res.description}</CardText>\r\n              </CardBody>\r\n              <div className=\"card-footer\">\r\n                <Button color=\"info\"\r\n                  outline\r\n                  color=\"primary\"\r\n                  onClick = {()=> addItem(res)}\r\n                >\r\n                  + Add To Cart\r\n                </Button>\r\n                \r\n              </div>\r\n            </Card>\r\n          </Col>\r\n       ));\r\n\r\n          return(\r\n            <>\r\n            {dishList}\r\n            </>\r\n          )\r\n        };\r\n    } \r\n    else{\r\n\r\n      return(\r\n        <>\r\n          {restaurant.dishes.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n              <Card style={{ margin: \"0 10px\" }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 150, width:150 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Button color=\"info\"\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick = {()=> addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                  \r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n    else{\r\n      return \"\"\r\n    }\r\n    }\r\n    export default Dishes\r\n\r\n\r\n    /*\r\n    <div>\r\n        <InputGroup>\r\n                <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n                <Input \r\n                    onChange={(e) =>\r\n                      setQuery(e.target.value.toLocaleLowerCase())\r\n                      }\r\n                      value={query}\r\n                />\r\n                </InputGroup>\r\n          </div>\r\n          */"]},"metadata":{},"sourceType":"module"}