{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/calvincheung/capstoneTwo/components/dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var _useState2 = useState(),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var restaurant = data.restaurant; //searchquery and then list out\n\n  var searchQuery = restaurant.dishes.filter(function (res) {\n    if (res.name.toLowerCase().includes(query)) {\n      return res;\n    } else {\n      return \"error\";\n    }\n  });\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(InputGroupAddon, {\n      addonType: \"append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \" Dishes Search \"), __jsx(Input, {\n      onChange: function onChange(e) {\n        return setQuery(e.target.value.toLocaleLowerCase());\n      },\n      value: query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }))), restaurant.dishes.map(function (res) {\n      var _jsx;\n\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, __jsx(Button, (_jsx = {\n        color: \"info\",\n        outline: true\n      }, _defineProperty(_jsx, \"color\", \"primary\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n        return addItem(res);\n      }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }), _jsx), \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }\n    }, \" No Dishes\");\n  }\n}\n\n_s(Dishes, \"62B8jGwbqmQBr2eVqGOJD9Jq32U=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["/Users/calvincheung/capstoneTwo/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","InputGroup","InputGroupAddon","Input","Dishes","restId","restaurantID","setRestaurantID","addItem","query","setQuery","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","searchQuery","dishes","filter","res","name","toLowerCase","includes","e","target","value","toLocaleLowerCase","map","padding","margin","height","width","image","url","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\r\nimport {gql,useQuery} from '@apollo/client';\r\nimport {useState, useContext} from 'react'\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n  import { InputGroup, InputGroupAddon,Input} from \"reactstrap\";\r\n  \r\nfunction Dishes({restId}){\r\n  const [restaurantID, setRestaurantID] = useState()\r\n  const {addItem} = useContext(AppContext)\r\n  const [query, setQuery] = useState()\r\n\r\nconst GET_RESTAURANT_DISHES = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      id\r\n      name\r\n      dishes {\r\n        id\r\n        name\r\n        description\r\n        price\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: restId},\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  //searchquery and then list out\r\n  \r\n  let searchQuery = restaurant.dishes.filter((res)=>{\r\n    if (res.name.toLowerCase().includes(query)){\r\n      return res;\r\n    } else{\r\n      return \"error\";\r\n    }\r\n  })\r\n\r\n  if (restId > 0){\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n        <InputGroup>\r\n                <InputGroupAddon addonType=\"append\"> Dishes Search </InputGroupAddon>\r\n                <Input \r\n                    onChange={(e) =>\r\n                      setQuery(e.target.value.toLocaleLowerCase())\r\n                      }\r\n                      value={query}\r\n                />\r\n                </InputGroup>\r\n          </div>\r\n          {restaurant.dishes.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n              <Card style={{ margin: \"0 10px\" }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 150, width:150 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Button color=\"info\"\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick = {()=> addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                  \r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </>\r\n        )}\r\n        else{\r\n          return <h1> No Dishes</h1>\r\n        }\r\n    }\r\n    export default Dishes"]},"metadata":{},"sourceType":"module"}